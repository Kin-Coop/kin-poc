(()=>{function n(o){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},n(o)}window.CiviCRMInlay=window.CiviCRMInlay||{app:null,inlays:{},debug:function(){}},window.CiviCRMInlay.app||function(){localStorage&&localStorage.getItem("inlayDebug")&&(window.CiviCRMInlay.debug=console.debug,window.CiviCRMInlay.xdebug=!0);var o=window.CiviCRMInlay.debug;o("Defining CiviCRMInlay.app");var e=window.CiviCRMInlay;e.app={bundleInfo:function(n,o){var e=Math.floor(((new Date).getTime()-n)/1e3),t="s",i=e<300?console.info:console.log;e>120?(e=Math.floor(e/60),t="mins"):e>1440?(e=Math.floor(e/24/60),t="days"):e>60&&(e=Math.floor(e/60),t="hrs"),i("Inlay bundle ".concat(o," created ").concat(e," ").concat(t," ago"))},bootWhenReady:function(){"complete"===document.readyState?(o("Document is already ready, booting any new inlays."),e.app.boot()):(o("Waiting for DOMContentLoaded to boot any new inlays."),document.addEventListener("DOMContentLoaded",e.app.boot))},boot:function(){o("Inlay app booting");var t=[];[].forEach.call(document.querySelectorAll("script[data-inlay-id]"),(function(i){t.push(i);var r=i.dataset.inlayId;i.inlayBooted?o("Inlay ".concat(r,": already booted")):r in e.inlays?(o("Inlay ".concat(r,": booting")),i.inlayBooted=!0,e.inlays[r]&&e.inlays[r].init in window?window[e.inlays[r].init]({initData:e.inlays[r],publicID:r,script:i,request:function(o){return e.app.request(r,o).catch((function(o){return console.error("Inlay caught unexpected "+n(o),o),alert("Sorry, an error occurred."),{error:o,responseOk:!1,responseStatus:500}}))}}):console.error("Failed to boot inlay ".concat(r,": missing data or init function"))):console.warn("Inlay ".concat(r,": Failed to instantiate from script:"))})),o("All inlays booted",t)},request:function(o,t){if(!o)return console.warn("Inlay broken: missing publicID in call to request()"),Promise.resolve({error:"Configuration problem on website. Code Inlay1"});if(!e.inlays[o])return console.warn("Inlay broken: invalid publicID in call to request()"),Promise.resolve({error:"Configuration problem on website. Code Inlay2"});if("object"!==n(t.body))return console.warn("Inlay broken: request must be called with object for body"),Promise.resolve({error:"Configuration problem on website. Code Inlay3"});(t=JSON.parse(JSON.stringify(t))).headers&&t.headers["Content-Type"]||(t.headers=t.headers||{},t.headers["Content-Type"]="application/json"),t.body.publicID=o,t.body=JSON.stringify(t.body);var i=e.inlays[o].inlayEndpoint;return("xdebug"in t||window.CiviCRMInlay.xdebug)&&(i+=(i.indexOf("?")>-1?"&":"?")+"XDEBUG_TRIGGER=1",delete t.xdebug),"get"===t.method&&(i+=(i.indexOf("?")>-1?"&":"?")+"inlayJSON="+encodeURIComponent(t.body),delete t.body),Object.assign(t,{mode:"cors",cache:"no-cache",credentials:"omit",redirect:"error",referrerPolicy:"origin-when-cross-origin"}),fetch(i,t).then((function(n){var o=n.headers.get("content-type");if(!o||!o.includes("application/json"))throw new TypeError("Server Error: JSON response required.");return n.json().then((function(o){return o.responseStatus=n.status,o.responseOk=n.ok,o}))}))}}}()})();