<?php

use Drupal\views\ViewExecutable;
use Drupal\Core\Form\FormStateInterface;

function kinmod_form_private_message_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  //dpm($form);
  //\Kint\Kint::dump($form);

  // Restrict the 'message' field to use only the 'plain_text' format.
  if (isset($form['message']['widget'][0])) {
    $form['message']['widget'][0]['#format'] = 'plain_text';
    $form['message']['widget'][0]['#allowed_formats'] = ['plain_text'];
  }
  if (isset($form['members'])) {
    // Make it disabled/read-only
    $form['members']['#disabled'] = TRUE;
  }
}

/**
 * Implements hook_views_post_render().
 */
function kin_views_post_render(ViewExecutable $view) {
    if($view->id() == 'kin_group_list'  && $view->current_display == 'page_2'){
        //dpm($view->result[0]->civicrm_contact_display_name);
        //dpm($view->result[0]);
        $title = $view->result[0]->civicrm_contact_display_name . " Group";

        // Set the view title.
        $view->setTitle($title);
        // Set the route title.
        //$route = \Drupal::routeMatch()->getCurrentRouteMatch()->getRouteObject();
        //$route->setDefault('_title', $title);

        $route = \Drupal::routeMatch()->getCurrentRouteMatch()->getRouteObject();
        $route->setDefault('_title_callback', function() use ($title) {
            return $title;
        });
    } elseif ($view->id() == 'forum'  && $view->current_display == 'page_2') {
        //dpm($view->result[0]->_relationship_entities['field_group']->entityTypeId[0]);
        $title = $view->result[0]->civicrm_group . " Group Forum";
        // Set the view title.
        $view->setTitle($title);
        // Set the route title.
        $route = \Drupal::routeMatch()->getCurrentRouteMatch()->getRouteObject();
        $route->setDefault('_title_callback', function() use ($title) {
            return $title;
        });
    }
}

function kin_views_pre_render(&$view){

    if($view->id() == 'contributions'){
        if(empty($view->result) && isset($view->exposed_widgets)){
            $view->exposed_widgets = FALSE;
        }
    }
}


/**
 * Implements hook_form_alter().
 */
function kinmod_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Check the view and display ID.
  /** @var \Drupal\views\ViewExecutable $view */

  // Get the View from the form state storage.
  $view = $form_state->getStorage()['view'] ?? NULL;

  if ($view && $view->id() === 'kin_group_list' && $view->current_display === 'block_1') {

    // The exposed text filter machine name will look like 'field_my_field_value'.
    if (isset($form['group_name'])) {
      // Add HTML5 minlength attribute.
      $form['group_name']['#attributes']['minlength'] = 2;

      // Add custom validation.
      $form['#validate'][] = 'kinmod_views_exposed_minlength_validate';
    }
  }
}

/**
 * Custom validation callback.
 */
function kinmod_views_exposed_minlength_validate(&$form, FormStateInterface $form_state) {
  $trigger = $form_state->getTriggeringElement();
  if (!isset($trigger['#value']) || strtolower($trigger['#id']) == 'edit-submit-kin-group-list') {
    return;
  }

  $value = $form_state->getValue('group_name');
  if (empty($value) || strlen($value) < 2) {
    $form_state->setErrorByName('group_name', t('Please enter at least 2 characters.'));
  }
}
